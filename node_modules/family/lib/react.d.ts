// Generated by dts-bundle-generator v7.2.0

import { ReactNode } from 'react';
import { Client, Hex, JsonRpcAccount, PublicActions, PublicRpcSchema, Transport, WalletActions, WalletRpcSchema } from 'viem';

export type ConnectButtonProps = {};
export declare const ConnectButton: (_: ConnectButtonProps) => import("react/jsx-runtime").JSX.Element;
export type EnvironmentConfig = {
	name: "production" | string;
	webElementsAppUrl: string;
};
export type ConnectConfig = {
	environment: EnvironmentConfig;
};
export type FamilyAccountsCustomActions = {
	getIdToken(): Promise<string | null>;
	switchAccounts(): Promise<Hex[]>;
	disconnect(): Promise<void>;
};
export type FamilyAccountsClient = Client<Transport, undefined, JsonRpcAccount, WalletRpcSchema & PublicRpcSchema, WalletActions<undefined, JsonRpcAccount> & PublicActions<Transport, undefined> & FamilyAccountsCustomActions>;
export type FamilyAccountsProviderProps = {
	children: ReactNode;
	config?: ConnectConfig;
};
export type FamilyAccountsState = {
	isInitialized: false;
} | {
	isInitialized: true;
	client: FamilyAccountsClient | null;
};
export declare const FamilyAccountsProvider: ({ children, config }: FamilyAccountsProviderProps) => import("react/jsx-runtime").JSX.Element;
export declare const useFamilyAccounts: () => FamilyAccountsState;
export declare const useFamilyAccountsClient: () => FamilyAccountsClient | null;

export {};
